-----Objective
-----In this challenge, we practice calculating the mean, median, and mode. Check out the Tutorial tab for learning materials and an instructional video!
-----
-----Task
-----Given an array, X, of  N integers, calculate and print the respective mean, median, and mode on separate lines. If your array contains more than one modal value, choose the numerically smallest one.
-----
-----Note: Other than the modal value (which will always be an integer), your answers should be in decimal form, rounded to a scale of  decimal place (i.e., ,  format).
-----
-----Input Format
-----
-----The first line contains an integer, , denoting the number of elements in the array.
-----The second line contains  space-separated integers describing the array's elements.
-----
-----Output Format
-----
-----Print  lines of output in the following order:
-----
-----Print the mean on a new line, to a scale of  1 decimal place.
-----Print the median on a new line, to a scale of  1 decimal place.
-----Print the mode on a new line; if more than one such value exists, print the numerically smallest one.
-----Sample Input
-----
-----10
-----64630 11735 14216 99233 14470 4978 73429 38120 51135 67060
-----Sample Output
-----
-----43900.6
-----44627.5
-----4978


# Enter your code here. Read input from STDIN. Print output to STDOUT
import sys

n=int(input())
N1=input()
N=N1.split(' ')

X=[]
for i in N:
   X.append(int(i))
   
#X=input()
X.sort()    
#print(X)
#print(type(y))
#X=int(X)
mean=sum(X)/n 
pos=int(n/2)
pos1=pos-1

if n%2==0:
    median=(X[pos]+X[pos1])/2
else:
    median=X[pos]    

#freq={}
#for items in X:
#    freq[items]=X.count(items)

#freq_val=[i for i in freq.values()]
#max1=max(freq_val)
#if max1==1:
#    mode=min(X)
#else:
#    for i in freq.keys():
#        if freq[i]==max1:
#            mode=i

from collections import Counter

c = Counter(X)
max_count = c.most_common(1)[0][1]
mode=sorted([x for x in c if c[x] == max_count])[0]

print(mean)
print(median)
print(mode)

